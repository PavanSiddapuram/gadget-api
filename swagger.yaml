openapi: 3.0.0
info:
  title: IMF Gadget API
  description: API for managing IMF gadgets
  version: 1.0.0
servers:
  - url: http://localhost:5001
    description: Local server
paths:
  /auth/signup:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required: [username, email, password]
      responses:
        '201':
          description: User registered
        '400':
          description: Email already in use
  /auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required: [email, password]
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials
  /gadgets:
    get:
      summary: Get all gadgets or filter by status
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [Available, Deployed, Destroyed, Decommissioned]
          description: Filter gadgets by status
      responses:
        '200':
          description: List of gadgets with success probability
        '400':
          description: Invalid status
    post:
      summary: Create a new gadget
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                status:
                  type: string
                  enum: [Available, Deployed, Destroyed, Decommissioned]
      responses:
        '201':
          description: Gadget created
        '400':
          description: Invalid input
  /gadgets/{id}:
    patch:
      summary: Update a gadget
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                status:
                  type: string
                  enum: [Available, Deployed, Destroyed, Decommissioned]
      responses:
        '200':
          description: Gadget updated
        '400':
          description: Invalid input
    delete:
      summary: Decommission a gadget
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Gadget decommissioned
  /gadgets/{id}/self-destruct:
    post:
      summary: Trigger gadget self-destruct
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Self-destruct initiated
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT